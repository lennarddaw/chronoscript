start: (statement | assign_stmt)+

statement: "loop" "every" TIME "if" condition "{" action+ "}"

condition: /[^{}]+/  -> raw_condition

?bool_expr: bool_term
          | bool_expr "||" bool_term   -> or_expr

?bool_term: bool_factor
          | bool_term "&&" bool_factor -> and_expr

?bool_factor: "!" bool_factor          -> not_expr
            | func_call
            | simple_cond
            | "(" bool_expr ")"

simple_cond: CNAME
func_call: CNAME "(" [condition_args] ")"
condition_args: condition_arg ("," condition_arg)*
condition_arg: ESCAPED_STRING | NUMBER | CNAME
?action: call_action
       | set_action

call_action: CNAME "(" string? ")" ";"                  -> call
set_action: "set" CNAME "=" value ";"                   -> set
?value: ESCAPED_STRING | NUMBER | CNAME

assign_stmt: "set" CNAME "=" value ";"

string: ESCAPED_STRING

TIME: /\d+[smhd]/

%import common.CNAME
%import common.NUMBER
%import common.ESCAPED_STRING
%import common.WS
%ignore WS
